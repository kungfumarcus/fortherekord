[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "fortherekord"
version = "0.1.0"
description = "Basic CLI shell for Rekordbox DJ library management"
authors = [{name = "kungfumarcus"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "click>=8.0.0",
    "PyYAML>=6.0.0",
    "pyrekordbox>=0.4.0",
    "spotipy>=2.22.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-timeout>=2.0.0",
    "pytest-env>=0.8.0",
    "flake8>=5.0.0",
    "pylint>=2.15.0",
    "mypy>=1.0.0",
    "black>=23.0.0",
]

[project.scripts]
fortherekord = "fortherekord.main:cli"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --tb=short"
testpaths = ["tests"]
env = [
    "FORTHEREKORD_TEST_MODE=1",
    "FORTHEREKORD_TEST_DUMP_FILE=test_changes_dump.json"
]

# Timeout configurations for different test types
timeout_method = "thread"
markers = [
    "e2e: marks tests as end-to-end tests (30 second timeout)",
    "slow: marks tests as slow running tests",
]

[tool.black]
line-length = 100
target-version = ['py39']

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__", 
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class.*\\(Protocol\\):",
    "@dataclass",
    "@pytest.fixture",
    "except ImportError:",  # Hard to test missing _version.py in normal test runs
]
skip_covered = true
show_missing = true

[tool.pylint.MASTER]
ignore = ["_version.py"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.setuptools.packages.find]
where = ["src"]
